#===============================================================================
# experimental: VGA graphics
#===============================================================================

def __vga__local():
	def outn():
		ebx = [esp + 16]
		xor(ecx,ecx)
		while ecx < [esp + 12]:
			eax = ecx
			edx = [esp+4]
			outb(dx,al)
			eax = [ebx + ecx]
			edx = [esp+8]
			outb(dx,al)
			inc(ecx)

	def palette():
		eax = [esp + 4]
		if test(eax,eax) is z:
			edx = 0x3DA; inb(al, dx)
			eax =    0; edx = 0x3C0; outb(dx,al)
		else:
			eax = 0x20; edx = 0x3C0; outb(dx,al)

	def sequenceron():
		edx = 0x3C2; outb(dx, al)
		outn(0x3C4,0x3C5,1,db(3))
	
def vga640x480x16():
	palette(0)

	outn(0x3C4,0x3C5,5,db(1,1,0x04,0,6))

	eax = 0xe3; sequenceron

	eax = 0x11; edx =0x3D4; outb(dx,al)
	eax =    0; edx =0x3D5; outb(dx,al)
	outn(0x3D4,0x3D5,25,db(
		0x5f, 0x4f, 0x50, 0x82,  0x54, 0x80, 0x0b, 0x3e,
		0x00, 0x40, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,
		0xea, 0x8c, 0xdf, 0x28,  0x00, 0xe7, 0x04, 0xe3,
		0xff))

	outn(0x3CC,0x3CA,1,db(1))
	outn(0x3CE,0x3CF,9,db(
		0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x05, 0x0f,
		0xff))

	edx = 0x3DA; inb(al, dx)

	outn(0x3C0,0x3C0,20,db(
		0x00, 0x01, 0x02, 0x03,  0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0A, 0x0B,  0x0C, 0x0D, 0x0E, 0x0F,
		0x01, 0x00, 0x0F, 0x00))

	palette(1)


def vga80x25():
	palette(0)

	outn(0x3C4,0x3C5,5,db(1,0,0x03,0,2))

	eax = 0x67; sequenceron

	eax = 0x11; edx =0x3D4; outb(dx,al)
	eax =    0; edx =0x3D5; outb(dx,al)
	outn(0x3D4,0x3D5,25,db(
		0x5f, 0x4f, 0x50, 0x82,  0x55, 0x81, 0xbf, 0x1f,
		0x00, 0x4f, 0x0d, 0x0e,  0x00, 0x00, 0x00, 0x00,
		0x9c, 0x8e, 0x8f, 0x28,  0x1f, 0x96, 0xb9, 0xa3,
		0xff))

	outn(0x3CC,0x3CA,1,db(1))
	outn(0x3CE,0x3CF,9,db(
		0x00, 0x00, 0x00, 0x00,  0x00, 0x10, 0x0e, 0x00,
		0xff))

	edx = 0x3DA; inb(al, dx)
	outn(0x3C0,0x3C0,20,db(
		0x00, 0x01, 0x02, 0x03,  0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0A, 0x0B,  0x0C, 0x0D, 0x0E, 0x0F,
		0x0C, 0x00, 0x0F, 0x08))

	palette(1)

def vga320x200x256():
	palette(0)

	outn(0x3C4,0x3C5,5,db(3,1,0xf,0,0xe)) # .., 0x6) for mode X
	
	eax = 0x63; sequenceron

	eax = 0x11; edx =0x3D4; outb(dx,al)
	eax =    0; edx =0x3D5; outb(dx,al)
	outn(0x3D4,0x3D5,25,db(
		0x5f, 0x4f, 0x50, 0x82,  0x54, 0x80, 0xbf, 0x1f,
		0x00, 0x41, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,
		0x9c, 0x0e, 0x8f, 0x28,  0x40, 0x96, 0xb9, 0xa3,
					# 0x00, ..., 0xe3 for mode X
		0xff))

	outn(0x3CC,0x3CA,1,db(1))
	outn(0x3CE,0x3CF,9,db(
		0x00, 0x00, 0x00, 0x00,  0x00, 0x40, 0x05, 0x0f,
		0xff))

	edx = 0x3DA; inb(al, dx)
	outn(0x3C0,0x3C0,20,db(
		0x00, 0x01, 0x02, 0x03,  0x04, 0x05, 0x06, 0x07,
		0x08, 0x09, 0x0A, 0x0B,  0x0C, 0x0D, 0x0E, 0x0F,
		0x41, 0x00, 0x0F, 0x00))

	palette(1)

def vgarplane():
	eax = 4
	edx = 0x3CE; outb(dx,al) # VGA_GC_INDEX
	eax = [esp + 4]
	inc(edx); outb(dx,al)

def vgawplane():
	eax = 2
	edx = 0x3C4; outb(dx,al) # VGA_SEQ_INDEX
	eax = [esp + 4]
	ebx = "\001\002\004\008"
	xlat
	inc(edx); outb(dx,al)

def vgadefaultpalette():
	esi = paldata
	xor(ecx,ecx)
	while ecx < 256:
		eax = ecx; edx = 0x3C8; outb(dx,al)
		lodsb;     edx = 0x3C9; outb(dx,al)
		lodsb;     edx = 0x3C9; outb(dx,al)
		lodsb;     edx = 0x3C9; outb(dx,al)
		inc(ecx)

paldata = db(
0, 0, 0,
0, 0, 42,
0, 42, 0,
0, 42, 42,
42, 0, 0,
42, 0, 42,
42, 21, 0,
42, 42, 42,
21, 21, 21,
21, 21, 63,
21, 63, 21,
21, 63, 63,
63, 21, 21,
63, 21, 63,
63, 63, 21,
63, 63, 63,
0, 0, 0,
5, 5, 5,
8, 8, 8,
11, 11, 11,
14, 14, 14,
17, 17, 17,
20, 20, 20,
24, 24, 24,
28, 28, 28,
32, 32, 32,
36, 36, 36,
40, 40, 40,
45, 45, 45,
50, 50, 50,
56, 56, 56,
63, 63, 63,
0, 0, 63,
16, 0, 63,
31, 0, 63,
47, 0, 63,
63, 0, 63,
63, 0, 47,
63, 0, 31,
63, 0, 16,
63, 0, 0,
63, 16, 0,
63, 31, 0,
63, 47, 0,
63, 63, 0,
47, 63, 0,
31, 63, 0,
16, 63, 0,
0, 63, 0,
0, 63, 16,
0, 63, 31,
0, 63, 47,
0, 63, 63,
0, 47, 63,
0, 31, 63,
0, 16, 63,
31, 31, 63,
39, 31, 63,
47, 31, 63,
55, 31, 63,
63, 31, 63,
63, 31, 55,
63, 31, 47,
63, 31, 39,
63, 31, 31,
63, 39, 31,
63, 47, 31,
63, 55, 31,
63, 63, 31,
55, 63, 31,
47, 63, 31,
39, 63, 31,
31, 63, 31,
31, 63, 39,
31, 63, 47,
31, 63, 55,
31, 63, 63,
31, 55, 63,
31, 47, 63,
31, 39, 63,
45, 45, 63,
49, 45, 63,
54, 45, 63,
58, 45, 63,
63, 45, 63,
63, 45, 58,
63, 45, 54,
63, 45, 49,
63, 45, 45,
63, 49, 45,
63, 54, 45,
63, 58, 45,
63, 63, 45,
58, 63, 45,
54, 63, 45,
49, 63, 45,
45, 63, 45,
45, 63, 49,
45, 63, 54,
45, 63, 58,
45, 63, 63,
45, 58, 63,
45, 54, 63,
45, 49, 63,
0, 0, 28,
7, 0, 28,
14, 0, 28,
21, 0, 28,
28, 0, 28,
28, 0, 21,
28, 0, 14,
28, 0, 7,
28, 0, 0,
28, 7, 0,
28, 14, 0,
28, 21, 0,
28, 29, 0,
21, 28, 0,
14, 28, 0,
7, 28, 0,
0, 28, 0,
0, 28, 7,
0, 28, 14,
0, 28, 21,
0, 28, 28,
0, 21, 28,
0, 14, 28,
0, 7, 28,
14, 14, 28,
17, 14, 28,
21, 14, 28,
24, 14, 28,
28, 14, 28,
28, 14, 24,
28, 14, 21,
28, 14, 17,
28, 14, 14,
28, 17, 14,
28, 21, 14,
28, 24, 14,
28, 28, 14,
24, 28, 14,
21, 28, 14,
17, 28, 14,
14, 28, 14,
14, 28, 17,
14, 28, 21,
14, 28, 24,
14, 28, 28,
14, 24, 28,
14, 21, 28,
14, 17, 28,
20, 20, 28,
22, 20, 28,
24, 20, 28,
26, 20, 28,
28, 20, 28,
28, 20, 26,
28, 20, 24,
28, 20, 22,
28, 20, 20,
28, 22, 20,
28, 24, 20,
28, 26, 20,
28, 28, 20,
26, 28, 20,
24, 28, 20,
22, 28, 20,
20, 28, 20,
20, 28, 22,
20, 28, 24,
20, 28, 26,
20, 28, 28,
20, 26, 28,
20, 24, 28,
20, 22, 28,
0, 0, 16,
4, 0, 16,
8, 0, 16,
12, 0, 16,
16, 0, 16,
16, 0, 12,
16, 0, 8,
16, 0, 4,
16, 0, 0,
16, 4, 0,
16, 8, 0,
16, 12, 0,
16, 16, 0,
12, 16, 0,
8, 16, 0,
4, 16, 0,
0, 16, 0,
0, 16, 4,
0, 16, 8,
0, 16, 12,
0, 16, 16,
0, 12, 16,
0, 8, 16,
0, 4, 16,
8, 8, 16,
10, 8, 16,
12, 8, 16,
14, 8, 16,
16, 8, 16,
16, 8, 14,
16, 8, 12,
16, 8, 10,
16, 8, 8,
16, 10, 8,
16, 12, 8,
16, 14, 8,
16, 16, 8,
14, 16, 8,
12, 16, 8,
10, 16, 8,
8, 16, 8,
8, 16, 10,
8, 16, 12,
8, 16, 14,
8, 16, 16,
8, 14, 16,
8, 12, 16,
8, 10, 16,
11, 11, 16,
12, 11, 16,
13, 11, 16,
15, 11, 16,
16, 11, 16,
16, 11, 15,
16, 11, 13,
16, 11, 12,
16, 11, 11,
16, 12, 11,
16, 13, 11,
16, 15, 11,
16, 16, 11,
15, 16, 11,
13, 16, 11,
12, 16, 11,
11, 16, 11,
11, 16, 12,
11, 16, 13,
11, 16, 15,
11, 16, 16,
11, 15, 16,
11, 13, 16,
11, 12, 16,
0, 0, 0,
0, 0, 0,
0, 0, 0,
0, 0, 0,
0, 0, 0,
0, 0, 0,
0, 0, 0,
0, 0, 0)

